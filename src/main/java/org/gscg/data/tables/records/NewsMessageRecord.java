/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.NewsMessage;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewsMessageRecord extends UpdatableRecordImpl<NewsMessageRecord> implements Record5<Integer, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.news_message.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.news_message.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.news_message.header</code>.
     */
    public void setHeader(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.news_message.header</code>.
     */
    public String getHeader() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.news_message.content</code>.
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.news_message.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gscg.news_message.game_scenario_id</code>.
     */
    public void setGameScenarioId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.news_message.game_scenario_id</code>.
     */
    public Integer getGameScenarioId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>gscg.news_message.trigger_fixed_id</code>.
     */
    public void setTriggerFixedId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.news_message.trigger_fixed_id</code>.
     */
    public Integer getTriggerFixedId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return NewsMessage.NEWS_MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return NewsMessage.NEWS_MESSAGE.HEADER;
    }

    @Override
    public Field<String> field3() {
        return NewsMessage.NEWS_MESSAGE.CONTENT;
    }

    @Override
    public Field<Integer> field4() {
        return NewsMessage.NEWS_MESSAGE.GAME_SCENARIO_ID;
    }

    @Override
    public Field<Integer> field5() {
        return NewsMessage.NEWS_MESSAGE.TRIGGER_FIXED_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getHeader();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public Integer component4() {
        return getGameScenarioId();
    }

    @Override
    public Integer component5() {
        return getTriggerFixedId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getHeader();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public Integer value4() {
        return getGameScenarioId();
    }

    @Override
    public Integer value5() {
        return getTriggerFixedId();
    }

    @Override
    public NewsMessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NewsMessageRecord value2(String value) {
        setHeader(value);
        return this;
    }

    @Override
    public NewsMessageRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public NewsMessageRecord value4(Integer value) {
        setGameScenarioId(value);
        return this;
    }

    @Override
    public NewsMessageRecord value5(Integer value) {
        setTriggerFixedId(value);
        return this;
    }

    @Override
    public NewsMessageRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NewsMessageRecord
     */
    public NewsMessageRecord() {
        super(NewsMessage.NEWS_MESSAGE);
    }

    /**
     * Create a detached, initialised NewsMessageRecord
     */
    public NewsMessageRecord(Integer id, String header, String content, Integer gameScenarioId, Integer triggerFixedId) {
        super(NewsMessage.NEWS_MESSAGE);

        setId(id);
        setHeader(header);
        setContent(content);
        setGameScenarioId(gameScenarioId);
        setTriggerFixedId(triggerFixedId);
        resetChangedOnNotNull();
    }
}
