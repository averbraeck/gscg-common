/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.Goal;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoalRecord extends UpdatableRecordImpl<GoalRecord> implements Record5<Integer, String, String, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.goal.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.goal.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.goal.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.goal.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.goal.variable</code>.
     */
    public void setVariable(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.goal.variable</code>.
     */
    public String getVariable() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gscg.goal.min_value</code>.
     */
    public void setMinValue(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.goal.min_value</code>.
     */
    public Double getMinValue() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gscg.goal.max_value</code>.
     */
    public void setMaxValue(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.goal.max_value</code>.
     */
    public Double getMaxValue() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Double, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Double, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Goal.GOAL.ID;
    }

    @Override
    public Field<String> field2() {
        return Goal.GOAL.NAME;
    }

    @Override
    public Field<String> field3() {
        return Goal.GOAL.VARIABLE;
    }

    @Override
    public Field<Double> field4() {
        return Goal.GOAL.MIN_VALUE;
    }

    @Override
    public Field<Double> field5() {
        return Goal.GOAL.MAX_VALUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getVariable();
    }

    @Override
    public Double component4() {
        return getMinValue();
    }

    @Override
    public Double component5() {
        return getMaxValue();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getVariable();
    }

    @Override
    public Double value4() {
        return getMinValue();
    }

    @Override
    public Double value5() {
        return getMaxValue();
    }

    @Override
    public GoalRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GoalRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public GoalRecord value3(String value) {
        setVariable(value);
        return this;
    }

    @Override
    public GoalRecord value4(Double value) {
        setMinValue(value);
        return this;
    }

    @Override
    public GoalRecord value5(Double value) {
        setMaxValue(value);
        return this;
    }

    @Override
    public GoalRecord values(Integer value1, String value2, String value3, Double value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GoalRecord
     */
    public GoalRecord() {
        super(Goal.GOAL);
    }

    /**
     * Create a detached, initialised GoalRecord
     */
    public GoalRecord(Integer id, String name, String variable, Double minValue, Double maxValue) {
        super(Goal.GOAL);

        setId(id);
        setName(name);
        setVariable(variable);
        setMinValue(minValue);
        setMaxValue(maxValue);
        resetChangedOnNotNull();
    }
}
