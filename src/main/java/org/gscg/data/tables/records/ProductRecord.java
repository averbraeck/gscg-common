/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.Product;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record11<Integer, String, Double, String, Double, String, Double, Double, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.product.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.product.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.product.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.product.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.product.average_sku_volume</code>.
     */
    public void setAverageSkuVolume(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.product.average_sku_volume</code>.
     */
    public Double getAverageSkuVolume() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gscg.product.sku_volume_unit</code>.
     */
    public void setSkuVolumeUnit(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.product.sku_volume_unit</code>.
     */
    public String getSkuVolumeUnit() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gscg.product.average_sku_weight</code>.
     */
    public void setAverageSkuWeight(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.product.average_sku_weight</code>.
     */
    public Double getAverageSkuWeight() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>gscg.product.sku_weight_unit</code>.
     */
    public void setSkuWeightUnit(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.product.sku_weight_unit</code>.
     */
    public String getSkuWeightUnit() {
        return (String) get(5);
    }

    /**
     * Setter for <code>gscg.product.depreciation</code>.
     */
    public void setDepreciation(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>gscg.product.depreciation</code>.
     */
    public Double getDepreciation() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>gscg.product.unit_market_price</code>.
     */
    public void setUnitMarketPrice(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>gscg.product.unit_market_price</code>.
     */
    public Double getUnitMarketPrice() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>gscg.product.price_unit</code>.
     */
    public void setPriceUnit(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>gscg.product.price_unit</code>.
     */
    public String getPriceUnit() {
        return (String) get(8);
    }

    /**
     * Setter for <code>gscg.product.game_version_id</code>.
     */
    public void setGameVersionId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>gscg.product.game_version_id</code>.
     */
    public Integer getGameVersionId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>gscg.product.sku_id</code>.
     */
    public void setSkuId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>gscg.product.sku_id</code>.
     */
    public Integer getSkuId() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Double, String, Double, String, Double, Double, String, Integer, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, Double, String, Double, String, Double, Double, String, Integer, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<Double> field3() {
        return Product.PRODUCT.AVERAGE_SKU_VOLUME;
    }

    @Override
    public Field<String> field4() {
        return Product.PRODUCT.SKU_VOLUME_UNIT;
    }

    @Override
    public Field<Double> field5() {
        return Product.PRODUCT.AVERAGE_SKU_WEIGHT;
    }

    @Override
    public Field<String> field6() {
        return Product.PRODUCT.SKU_WEIGHT_UNIT;
    }

    @Override
    public Field<Double> field7() {
        return Product.PRODUCT.DEPRECIATION;
    }

    @Override
    public Field<Double> field8() {
        return Product.PRODUCT.UNIT_MARKET_PRICE;
    }

    @Override
    public Field<String> field9() {
        return Product.PRODUCT.PRICE_UNIT;
    }

    @Override
    public Field<Integer> field10() {
        return Product.PRODUCT.GAME_VERSION_ID;
    }

    @Override
    public Field<Integer> field11() {
        return Product.PRODUCT.SKU_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getAverageSkuVolume();
    }

    @Override
    public String component4() {
        return getSkuVolumeUnit();
    }

    @Override
    public Double component5() {
        return getAverageSkuWeight();
    }

    @Override
    public String component6() {
        return getSkuWeightUnit();
    }

    @Override
    public Double component7() {
        return getDepreciation();
    }

    @Override
    public Double component8() {
        return getUnitMarketPrice();
    }

    @Override
    public String component9() {
        return getPriceUnit();
    }

    @Override
    public Integer component10() {
        return getGameVersionId();
    }

    @Override
    public Integer component11() {
        return getSkuId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getAverageSkuVolume();
    }

    @Override
    public String value4() {
        return getSkuVolumeUnit();
    }

    @Override
    public Double value5() {
        return getAverageSkuWeight();
    }

    @Override
    public String value6() {
        return getSkuWeightUnit();
    }

    @Override
    public Double value7() {
        return getDepreciation();
    }

    @Override
    public Double value8() {
        return getUnitMarketPrice();
    }

    @Override
    public String value9() {
        return getPriceUnit();
    }

    @Override
    public Integer value10() {
        return getGameVersionId();
    }

    @Override
    public Integer value11() {
        return getSkuId();
    }

    @Override
    public ProductRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value3(Double value) {
        setAverageSkuVolume(value);
        return this;
    }

    @Override
    public ProductRecord value4(String value) {
        setSkuVolumeUnit(value);
        return this;
    }

    @Override
    public ProductRecord value5(Double value) {
        setAverageSkuWeight(value);
        return this;
    }

    @Override
    public ProductRecord value6(String value) {
        setSkuWeightUnit(value);
        return this;
    }

    @Override
    public ProductRecord value7(Double value) {
        setDepreciation(value);
        return this;
    }

    @Override
    public ProductRecord value8(Double value) {
        setUnitMarketPrice(value);
        return this;
    }

    @Override
    public ProductRecord value9(String value) {
        setPriceUnit(value);
        return this;
    }

    @Override
    public ProductRecord value10(Integer value) {
        setGameVersionId(value);
        return this;
    }

    @Override
    public ProductRecord value11(Integer value) {
        setSkuId(value);
        return this;
    }

    @Override
    public ProductRecord values(Integer value1, String value2, Double value3, String value4, Double value5, String value6, Double value7, Double value8, String value9, Integer value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer id, String name, Double averageSkuVolume, String skuVolumeUnit, Double averageSkuWeight, String skuWeightUnit, Double depreciation, Double unitMarketPrice, String priceUnit, Integer gameVersionId, Integer skuId) {
        super(Product.PRODUCT);

        setId(id);
        setName(name);
        setAverageSkuVolume(averageSkuVolume);
        setSkuVolumeUnit(skuVolumeUnit);
        setAverageSkuWeight(averageSkuWeight);
        setSkuWeightUnit(skuWeightUnit);
        setDepreciation(depreciation);
        setUnitMarketPrice(unitMarketPrice);
        setPriceUnit(priceUnit);
        setGameVersionId(gameVersionId);
        setSkuId(skuId);
        resetChangedOnNotNull();
    }
}
