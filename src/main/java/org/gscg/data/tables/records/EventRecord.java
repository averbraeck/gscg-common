/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.Event;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record12<Integer, String, String, Integer, String, Byte, String, String, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.event.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.event.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.event.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.event.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.event.object_type</code>.
     */
    public void setObjectType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.event.object_type</code>.
     */
    public String getObjectType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gscg.event.object_id</code>.
     */
    public void setObjectId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.event.object_id</code>.
     */
    public Integer getObjectId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>gscg.event.object_name</code>.
     */
    public void setObjectName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.event.object_name</code>.
     */
    public String getObjectName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gscg.event.object_available</code>.
     */
    public void setObjectAvailable(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.event.object_available</code>.
     */
    public Byte getObjectAvailable() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>gscg.event.parameter_name</code>.
     */
    public void setParameterName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>gscg.event.parameter_name</code>.
     */
    public String getParameterName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>gscg.event.parameter_value</code>.
     */
    public void setParameterValue(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>gscg.event.parameter_value</code>.
     */
    public String getParameterValue() {
        return (String) get(7);
    }

    /**
     * Setter for <code>gscg.event.trigger_fixed_id</code>.
     */
    public void setTriggerFixedId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>gscg.event.trigger_fixed_id</code>.
     */
    public Integer getTriggerFixedId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>gscg.event.trigger_interval_id</code>.
     */
    public void setTriggerIntervalId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>gscg.event.trigger_interval_id</code>.
     */
    public Integer getTriggerIntervalId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>gscg.event.game_scenario_id</code>.
     */
    public void setGameScenarioId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>gscg.event.game_scenario_id</code>.
     */
    public Integer getGameScenarioId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>gscg.event.news_message_id</code>.
     */
    public void setNewsMessageId(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>gscg.event.news_message_id</code>.
     */
    public Integer getNewsMessageId() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, Integer, String, Byte, String, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, String, Integer, String, Byte, String, String, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Event.EVENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Event.EVENT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Event.EVENT.OBJECT_TYPE;
    }

    @Override
    public Field<Integer> field4() {
        return Event.EVENT.OBJECT_ID;
    }

    @Override
    public Field<String> field5() {
        return Event.EVENT.OBJECT_NAME;
    }

    @Override
    public Field<Byte> field6() {
        return Event.EVENT.OBJECT_AVAILABLE;
    }

    @Override
    public Field<String> field7() {
        return Event.EVENT.PARAMETER_NAME;
    }

    @Override
    public Field<String> field8() {
        return Event.EVENT.PARAMETER_VALUE;
    }

    @Override
    public Field<Integer> field9() {
        return Event.EVENT.TRIGGER_FIXED_ID;
    }

    @Override
    public Field<Integer> field10() {
        return Event.EVENT.TRIGGER_INTERVAL_ID;
    }

    @Override
    public Field<Integer> field11() {
        return Event.EVENT.GAME_SCENARIO_ID;
    }

    @Override
    public Field<Integer> field12() {
        return Event.EVENT.NEWS_MESSAGE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getObjectType();
    }

    @Override
    public Integer component4() {
        return getObjectId();
    }

    @Override
    public String component5() {
        return getObjectName();
    }

    @Override
    public Byte component6() {
        return getObjectAvailable();
    }

    @Override
    public String component7() {
        return getParameterName();
    }

    @Override
    public String component8() {
        return getParameterValue();
    }

    @Override
    public Integer component9() {
        return getTriggerFixedId();
    }

    @Override
    public Integer component10() {
        return getTriggerIntervalId();
    }

    @Override
    public Integer component11() {
        return getGameScenarioId();
    }

    @Override
    public Integer component12() {
        return getNewsMessageId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getObjectType();
    }

    @Override
    public Integer value4() {
        return getObjectId();
    }

    @Override
    public String value5() {
        return getObjectName();
    }

    @Override
    public Byte value6() {
        return getObjectAvailable();
    }

    @Override
    public String value7() {
        return getParameterName();
    }

    @Override
    public String value8() {
        return getParameterValue();
    }

    @Override
    public Integer value9() {
        return getTriggerFixedId();
    }

    @Override
    public Integer value10() {
        return getTriggerIntervalId();
    }

    @Override
    public Integer value11() {
        return getGameScenarioId();
    }

    @Override
    public Integer value12() {
        return getNewsMessageId();
    }

    @Override
    public EventRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EventRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EventRecord value3(String value) {
        setObjectType(value);
        return this;
    }

    @Override
    public EventRecord value4(Integer value) {
        setObjectId(value);
        return this;
    }

    @Override
    public EventRecord value5(String value) {
        setObjectName(value);
        return this;
    }

    @Override
    public EventRecord value6(Byte value) {
        setObjectAvailable(value);
        return this;
    }

    @Override
    public EventRecord value7(String value) {
        setParameterName(value);
        return this;
    }

    @Override
    public EventRecord value8(String value) {
        setParameterValue(value);
        return this;
    }

    @Override
    public EventRecord value9(Integer value) {
        setTriggerFixedId(value);
        return this;
    }

    @Override
    public EventRecord value10(Integer value) {
        setTriggerIntervalId(value);
        return this;
    }

    @Override
    public EventRecord value11(Integer value) {
        setGameScenarioId(value);
        return this;
    }

    @Override
    public EventRecord value12(Integer value) {
        setNewsMessageId(value);
        return this;
    }

    @Override
    public EventRecord values(Integer value1, String value2, String value3, Integer value4, String value5, Byte value6, String value7, String value8, Integer value9, Integer value10, Integer value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Integer id, String name, String objectType, Integer objectId, String objectName, Byte objectAvailable, String parameterName, String parameterValue, Integer triggerFixedId, Integer triggerIntervalId, Integer gameScenarioId, Integer newsMessageId) {
        super(Event.EVENT);

        setId(id);
        setName(name);
        setObjectType(objectType);
        setObjectId(objectId);
        setObjectName(objectName);
        setObjectAvailable(objectAvailable);
        setParameterName(parameterName);
        setParameterValue(parameterValue);
        setTriggerFixedId(triggerFixedId);
        setTriggerIntervalId(triggerIntervalId);
        setGameScenarioId(gameScenarioId);
        setNewsMessageId(newsMessageId);
        resetChangedOnNotNull();
    }
}
