/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.Sku;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkuRecord extends UpdatableRecordImpl<SkuRecord> implements Record4<Integer, String, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.sku.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.sku.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.sku.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.sku.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.sku.max_volume_m3</code>.
     */
    public void setMaxVolumeM3(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.sku.max_volume_m3</code>.
     */
    public Double getMaxVolumeM3() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gscg.sku.max_weight_kg</code>.
     */
    public void setMaxWeightKg(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.sku.max_weight_kg</code>.
     */
    public Double getMaxWeightKg() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Double, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Double, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sku.SKU.ID;
    }

    @Override
    public Field<String> field2() {
        return Sku.SKU.NAME;
    }

    @Override
    public Field<Double> field3() {
        return Sku.SKU.MAX_VOLUME_M3;
    }

    @Override
    public Field<Double> field4() {
        return Sku.SKU.MAX_WEIGHT_KG;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getMaxVolumeM3();
    }

    @Override
    public Double component4() {
        return getMaxWeightKg();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getMaxVolumeM3();
    }

    @Override
    public Double value4() {
        return getMaxWeightKg();
    }

    @Override
    public SkuRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SkuRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SkuRecord value3(Double value) {
        setMaxVolumeM3(value);
        return this;
    }

    @Override
    public SkuRecord value4(Double value) {
        setMaxWeightKg(value);
        return this;
    }

    @Override
    public SkuRecord values(Integer value1, String value2, Double value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SkuRecord
     */
    public SkuRecord() {
        super(Sku.SKU);
    }

    /**
     * Create a detached, initialised SkuRecord
     */
    public SkuRecord(Integer id, String name, Double maxVolumeM3, Double maxWeightKg) {
        super(Sku.SKU);

        setId(id);
        setName(name);
        setMaxVolumeM3(maxVolumeM3);
        setMaxWeightKg(maxWeightKg);
        resetChangedOnNotNull();
    }
}
