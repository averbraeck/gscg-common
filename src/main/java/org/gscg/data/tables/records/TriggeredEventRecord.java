/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import java.time.LocalDateTime;

import org.gscg.data.tables.TriggeredEvent;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TriggeredEventRecord extends UpdatableRecordImpl<TriggeredEventRecord> implements Record7<Integer, LocalDateTime, LocalDateTime, Byte, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.triggered_event.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.triggered_event.game_time</code>.
     */
    public void setGameTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.game_time</code>.
     */
    public LocalDateTime getGameTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>gscg.triggered_event.wall_time</code>.
     */
    public void setWallTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.wall_time</code>.
     */
    public LocalDateTime getWallTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>gscg.triggered_event.triggered_facilitator</code>.
     */
    public void setTriggeredFacilitator(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.triggered_facilitator</code>.
     */
    public Byte getTriggeredFacilitator() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>gscg.triggered_event.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gscg.triggered_event.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>gscg.triggered_event.game_session_id</code>.
     */
    public void setGameSessionId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>gscg.triggered_event.game_session_id</code>.
     */
    public Integer getGameSessionId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDateTime, LocalDateTime, Byte, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDateTime, LocalDateTime, Byte, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TriggeredEvent.TRIGGERED_EVENT.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return TriggeredEvent.TRIGGERED_EVENT.GAME_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return TriggeredEvent.TRIGGERED_EVENT.WALL_TIME;
    }

    @Override
    public Field<Byte> field4() {
        return TriggeredEvent.TRIGGERED_EVENT.TRIGGERED_FACILITATOR;
    }

    @Override
    public Field<String> field5() {
        return TriggeredEvent.TRIGGERED_EVENT.STATE;
    }

    @Override
    public Field<Integer> field6() {
        return TriggeredEvent.TRIGGERED_EVENT.EVENT_ID;
    }

    @Override
    public Field<Integer> field7() {
        return TriggeredEvent.TRIGGERED_EVENT.GAME_SESSION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getGameTime();
    }

    @Override
    public LocalDateTime component3() {
        return getWallTime();
    }

    @Override
    public Byte component4() {
        return getTriggeredFacilitator();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public Integer component6() {
        return getEventId();
    }

    @Override
    public Integer component7() {
        return getGameSessionId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getGameTime();
    }

    @Override
    public LocalDateTime value3() {
        return getWallTime();
    }

    @Override
    public Byte value4() {
        return getTriggeredFacilitator();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public Integer value6() {
        return getEventId();
    }

    @Override
    public Integer value7() {
        return getGameSessionId();
    }

    @Override
    public TriggeredEventRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value2(LocalDateTime value) {
        setGameTime(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value3(LocalDateTime value) {
        setWallTime(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value4(Byte value) {
        setTriggeredFacilitator(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value6(Integer value) {
        setEventId(value);
        return this;
    }

    @Override
    public TriggeredEventRecord value7(Integer value) {
        setGameSessionId(value);
        return this;
    }

    @Override
    public TriggeredEventRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, Byte value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TriggeredEventRecord
     */
    public TriggeredEventRecord() {
        super(TriggeredEvent.TRIGGERED_EVENT);
    }

    /**
     * Create a detached, initialised TriggeredEventRecord
     */
    public TriggeredEventRecord(Integer id, LocalDateTime gameTime, LocalDateTime wallTime, Byte triggeredFacilitator, String state, Integer eventId, Integer gameSessionId) {
        super(TriggeredEvent.TRIGGERED_EVENT);

        setId(id);
        setGameTime(gameTime);
        setWallTime(wallTime);
        setTriggeredFacilitator(triggeredFacilitator);
        setState(state);
        setEventId(eventId);
        setGameSessionId(gameSessionId);
        resetChangedOnNotNull();
    }
}
