/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.BomItem;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BomItemRecord extends UpdatableRecordImpl<BomItemRecord> implements Record4<Integer, Double, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.bom_item.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.bom_item.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.bom_item.amount</code>.
     */
    public void setAmount(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.bom_item.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>gscg.bom_item.product_id</code>.
     */
    public void setProductId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.bom_item.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>gscg.bom_item.bill_of_materials_id</code>.
     */
    public void setBillOfMaterialsId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.bom_item.bill_of_materials_id</code>.
     */
    public Integer getBillOfMaterialsId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Double, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Double, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BomItem.BOM_ITEM.ID;
    }

    @Override
    public Field<Double> field2() {
        return BomItem.BOM_ITEM.AMOUNT;
    }

    @Override
    public Field<Integer> field3() {
        return BomItem.BOM_ITEM.PRODUCT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return BomItem.BOM_ITEM.BILL_OF_MATERIALS_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getAmount();
    }

    @Override
    public Integer component3() {
        return getProductId();
    }

    @Override
    public Integer component4() {
        return getBillOfMaterialsId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getAmount();
    }

    @Override
    public Integer value3() {
        return getProductId();
    }

    @Override
    public Integer value4() {
        return getBillOfMaterialsId();
    }

    @Override
    public BomItemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BomItemRecord value2(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public BomItemRecord value3(Integer value) {
        setProductId(value);
        return this;
    }

    @Override
    public BomItemRecord value4(Integer value) {
        setBillOfMaterialsId(value);
        return this;
    }

    @Override
    public BomItemRecord values(Integer value1, Double value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BomItemRecord
     */
    public BomItemRecord() {
        super(BomItem.BOM_ITEM);
    }

    /**
     * Create a detached, initialised BomItemRecord
     */
    public BomItemRecord(Integer id, Double amount, Integer productId, Integer billOfMaterialsId) {
        super(BomItem.BOM_ITEM);

        setId(id);
        setAmount(amount);
        setProductId(productId);
        setBillOfMaterialsId(billOfMaterialsId);
        resetChangedOnNotNull();
    }
}
