/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import java.time.LocalDateTime;

import org.gscg.data.tables.TriggerFixed;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TriggerFixedRecord extends UpdatableRecordImpl<TriggerFixedRecord> implements Record7<Integer, String, LocalDateTime, Double, String, Byte, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.trigger_fixed.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.timestamp_datetime</code>.
     */
    public void setTimestampDatetime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.timestamp_datetime</code>.
     */
    public LocalDateTime getTimestampDatetime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.timestamp_gametime</code>.
     */
    public void setTimestampGametime(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.timestamp_gametime</code>.
     */
    public Double getTimestampGametime() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.timestamp_unit</code>.
     */
    public void setTimestampUnit(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.timestamp_unit</code>.
     */
    public String getTimestampUnit() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.facilitator_trigger</code>.
     */
    public void setFacilitatorTrigger(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.facilitator_trigger</code>.
     */
    public Byte getFacilitatorTrigger() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>gscg.trigger_fixed.trigger_once</code>.
     */
    public void setTriggerOnce(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>gscg.trigger_fixed.trigger_once</code>.
     */
    public Byte getTriggerOnce() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, LocalDateTime, Double, String, Byte, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, LocalDateTime, Double, String, Byte, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TriggerFixed.TRIGGER_FIXED.ID;
    }

    @Override
    public Field<String> field2() {
        return TriggerFixed.TRIGGER_FIXED.NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return TriggerFixed.TRIGGER_FIXED.TIMESTAMP_DATETIME;
    }

    @Override
    public Field<Double> field4() {
        return TriggerFixed.TRIGGER_FIXED.TIMESTAMP_GAMETIME;
    }

    @Override
    public Field<String> field5() {
        return TriggerFixed.TRIGGER_FIXED.TIMESTAMP_UNIT;
    }

    @Override
    public Field<Byte> field6() {
        return TriggerFixed.TRIGGER_FIXED.FACILITATOR_TRIGGER;
    }

    @Override
    public Field<Byte> field7() {
        return TriggerFixed.TRIGGER_FIXED.TRIGGER_ONCE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDateTime component3() {
        return getTimestampDatetime();
    }

    @Override
    public Double component4() {
        return getTimestampGametime();
    }

    @Override
    public String component5() {
        return getTimestampUnit();
    }

    @Override
    public Byte component6() {
        return getFacilitatorTrigger();
    }

    @Override
    public Byte component7() {
        return getTriggerOnce();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDateTime value3() {
        return getTimestampDatetime();
    }

    @Override
    public Double value4() {
        return getTimestampGametime();
    }

    @Override
    public String value5() {
        return getTimestampUnit();
    }

    @Override
    public Byte value6() {
        return getFacilitatorTrigger();
    }

    @Override
    public Byte value7() {
        return getTriggerOnce();
    }

    @Override
    public TriggerFixedRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value3(LocalDateTime value) {
        setTimestampDatetime(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value4(Double value) {
        setTimestampGametime(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value5(String value) {
        setTimestampUnit(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value6(Byte value) {
        setFacilitatorTrigger(value);
        return this;
    }

    @Override
    public TriggerFixedRecord value7(Byte value) {
        setTriggerOnce(value);
        return this;
    }

    @Override
    public TriggerFixedRecord values(Integer value1, String value2, LocalDateTime value3, Double value4, String value5, Byte value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TriggerFixedRecord
     */
    public TriggerFixedRecord() {
        super(TriggerFixed.TRIGGER_FIXED);
    }

    /**
     * Create a detached, initialised TriggerFixedRecord
     */
    public TriggerFixedRecord(Integer id, String name, LocalDateTime timestampDatetime, Double timestampGametime, String timestampUnit, Byte facilitatorTrigger, Byte triggerOnce) {
        super(TriggerFixed.TRIGGER_FIXED);

        setId(id);
        setName(name);
        setTimestampDatetime(timestampDatetime);
        setTimestampGametime(timestampGametime);
        setTimestampUnit(timestampUnit);
        setFacilitatorTrigger(facilitatorTrigger);
        setTriggerOnce(triggerOnce);
        resetChangedOnNotNull();
    }
}
