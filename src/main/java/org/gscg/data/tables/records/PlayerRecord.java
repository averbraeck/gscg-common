/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import org.gscg.data.tables.Player;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record8<Integer, String, String, String, String, Byte, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.player.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.player.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.player.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.player.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gscg.player.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.player.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gscg.player.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.player.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gscg.player.salt</code>.
     */
    public void setSalt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.player.salt</code>.
     */
    public String getSalt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>gscg.player.blocked</code>.
     */
    public void setBlocked(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.player.blocked</code>.
     */
    public Byte getBlocked() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>gscg.player.game_session_id</code>.
     */
    public void setGameSessionId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>gscg.player.game_session_id</code>.
     */
    public Integer getGameSessionId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>gscg.player.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>gscg.player.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, Byte, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, Byte, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Player.PLAYER.ID;
    }

    @Override
    public Field<String> field2() {
        return Player.PLAYER.NAME;
    }

    @Override
    public Field<String> field3() {
        return Player.PLAYER.DISPLAY_NAME;
    }

    @Override
    public Field<String> field4() {
        return Player.PLAYER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Player.PLAYER.SALT;
    }

    @Override
    public Field<Byte> field6() {
        return Player.PLAYER.BLOCKED;
    }

    @Override
    public Field<Integer> field7() {
        return Player.PLAYER.GAME_SESSION_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Player.PLAYER.USER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDisplayName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public Byte component6() {
        return getBlocked();
    }

    @Override
    public Integer component7() {
        return getGameSessionId();
    }

    @Override
    public Integer component8() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDisplayName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public Byte value6() {
        return getBlocked();
    }

    @Override
    public Integer value7() {
        return getGameSessionId();
    }

    @Override
    public Integer value8() {
        return getUserId();
    }

    @Override
    public PlayerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PlayerRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public PlayerRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public PlayerRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public PlayerRecord value6(Byte value) {
        setBlocked(value);
        return this;
    }

    @Override
    public PlayerRecord value7(Integer value) {
        setGameSessionId(value);
        return this;
    }

    @Override
    public PlayerRecord value8(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public PlayerRecord values(Integer value1, String value2, String value3, String value4, String value5, Byte value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(Integer id, String name, String displayName, String password, String salt, Byte blocked, Integer gameSessionId, Integer userId) {
        super(Player.PLAYER);

        setId(id);
        setName(name);
        setDisplayName(displayName);
        setPassword(password);
        setSalt(salt);
        setBlocked(blocked);
        setGameSessionId(gameSessionId);
        setUserId(userId);
        resetChangedOnNotNull();
    }
}
