/*
 * This file is generated by jOOQ.
 */
package org.gscg.data.tables.records;


import java.time.LocalDateTime;

import org.gscg.data.tables.PlayerScore;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerScoreRecord extends UpdatableRecordImpl<PlayerScoreRecord> implements Record6<Integer, LocalDateTime, LocalDateTime, Double, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gscg.player_score.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gscg.player_score.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gscg.player_score.game_time</code>.
     */
    public void setGameTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>gscg.player_score.game_time</code>.
     */
    public LocalDateTime getGameTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>gscg.player_score.wall_time</code>.
     */
    public void setWallTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>gscg.player_score.wall_time</code>.
     */
    public LocalDateTime getWallTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>gscg.player_score.value</code>.
     */
    public void setValue(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>gscg.player_score.value</code>.
     */
    public Double getValue() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>gscg.player_score.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>gscg.player_score.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>gscg.player_score.goal_id</code>.
     */
    public void setGoalId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>gscg.player_score.goal_id</code>.
     */
    public Integer getGoalId() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, LocalDateTime, Double, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, LocalDateTime, LocalDateTime, Double, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PlayerScore.PLAYER_SCORE.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PlayerScore.PLAYER_SCORE.GAME_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return PlayerScore.PLAYER_SCORE.WALL_TIME;
    }

    @Override
    public Field<Double> field4() {
        return PlayerScore.PLAYER_SCORE.VALUE;
    }

    @Override
    public Field<Integer> field5() {
        return PlayerScore.PLAYER_SCORE.PLAYER_ID;
    }

    @Override
    public Field<Integer> field6() {
        return PlayerScore.PLAYER_SCORE.GOAL_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getGameTime();
    }

    @Override
    public LocalDateTime component3() {
        return getWallTime();
    }

    @Override
    public Double component4() {
        return getValue();
    }

    @Override
    public Integer component5() {
        return getPlayerId();
    }

    @Override
    public Integer component6() {
        return getGoalId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getGameTime();
    }

    @Override
    public LocalDateTime value3() {
        return getWallTime();
    }

    @Override
    public Double value4() {
        return getValue();
    }

    @Override
    public Integer value5() {
        return getPlayerId();
    }

    @Override
    public Integer value6() {
        return getGoalId();
    }

    @Override
    public PlayerScoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value2(LocalDateTime value) {
        setGameTime(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value3(LocalDateTime value) {
        setWallTime(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value4(Double value) {
        setValue(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value5(Integer value) {
        setPlayerId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord value6(Integer value) {
        setGoalId(value);
        return this;
    }

    @Override
    public PlayerScoreRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, Double value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerScoreRecord
     */
    public PlayerScoreRecord() {
        super(PlayerScore.PLAYER_SCORE);
    }

    /**
     * Create a detached, initialised PlayerScoreRecord
     */
    public PlayerScoreRecord(Integer id, LocalDateTime gameTime, LocalDateTime wallTime, Double value, Integer playerId, Integer goalId) {
        super(PlayerScore.PLAYER_SCORE);

        setId(id);
        setGameTime(gameTime);
        setWallTime(wallTime);
        setValue(value);
        setPlayerId(playerId);
        setGoalId(goalId);
        resetChangedOnNotNull();
    }
}
